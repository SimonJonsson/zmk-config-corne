/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    combos {
        compatible = "zmk,combos";

        cpslck {
            bindings = <&kp CAPSLOCK>;
            key-positions = <39 28>;
            layers = <0>;
        };

        parentheses_left {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 17>;
            layers = <0>;
        };

        parentheses_right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <23 24>;
            layers = <0>;
        };

        bracket_left {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
            layers = <0>;
        };

        bracket_right {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 10>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <16 17>;
            layers = <0>;
        };

        brace_left {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
            layers = <0>;
        };

        brace_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <35 36>;
            layers = <0>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 3>;
            layers = <0>;
        };

        bigger_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <10 11>;
            layers = <0>;
        };

        hyphen {
            bindings = <&kp MINUS>;
            key-positions = <35 32>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <4 9>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <23 18>;
            layers = <0>;
        };

        Pipe {
            bindings = <&kp PIPE>;
            key-positions = <30 31>;
            layers = <0>;
        };

        astrsk {
            bindings = <&kp ASTERISK>;
            key-positions = <3 10>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <17 24>;
            layers = <0>;
        };

        excl {
            bindings = <&kp EXCL>;
            key-positions = <31 36>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <19 22>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <33 34>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <25 26>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <15 16>;
            layers = <0>;
        };

        percentage {
            bindings = <&kp PERCENT>;
            key-positions = <5 8>;
        };

        o_umlaut {
            bindings = <&u_umlaut>;
            key-positions = <9 11>;
            layers = <0>;
        };

        a_umlaut {
            bindings = <&a_umlaut>;
            key-positions = <9 15>;
            layers = <0>;
        };

        a_ring {
            bindings = <&ae>;
            key-positions = <3 15>;
            layers = <0>;
        };

        hashtag {
            bindings = <&kp HASH>;
            key-positions = <24 25>;
        };

        snabel_a {
            bindings = <&kp AT>;
            key-positions = <36 37>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 38 39 40 41 37 36>;
            require-prior-idle-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        lrt: lrt {
            compatible = "zmk,behavior-hold-tap";
            label = "LRT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    macros {
        u_umlaut: u_umlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(U) &kp O>;
            label = "U_UMLAUT";
        };

        a_umlaut: a_umlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "A_UMLAUT";
        };

        ae: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(A)>;
            label = "AE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E            &kp R     &kp T        &none  &none  &kp Y        &kp U         &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D            &kp F     &kp G        &none  &none  &kp H        &kp J         &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C            &kp V     &kp B                      &kp N        &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &lt 3 BACKSPACE  &kp LGUI  &lt 1 SPACE                &lt 4 ENTER  &kp LEFT_ALT  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        NUMBERS {
            display-name = "numbers";
            bindings = <
&none   &none  &none  &none  &none   &none  &none  &none  &kp MINUS  &kp N7  &kp N8  &kp N9  &kp EQUAL     &none
&none   &none  &none  &none  &none   &none  &none  &none  &kp PLUS   &kp N4  &kp N5  &kp N6  &kp ASTERISK  &none
&trans  &none  &none  &none  &none   &none                &kp N0     &kp N1  &kp N2  &kp N3  &trans        &trans
                      &none  &trans  &none                &trans     &trans  &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT | RALT  |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |               |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp LCTRL  &kp RCTRL  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans     &kp LALT   &kp RALT   &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans                           &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE                        &kp RET    &trans     &kp RALT
            >;
        };

        MOUSE {
            display-name = "MOUSE";
            bindings = <
&none   &none  &none      &none           &none            &none           &none  &none  &kp C_AC_HOME  &kp END   &none   &none      &none  &none
&none   &none  &mkp MCLK  &mkp RCLK       &mkp LCLK        &msc SCRL_UP    &none  &none  &kp LEFT       &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&trans  &none  &none      &msc SCRL_LEFT  &msc SCRL_RIGHT  &msc SCRL_DOWN                &none          &none     &none   &none      &none  &trans
                          &none           &trans           &trans                        &trans         &trans    &trans
            >;
        };

        FUNC {
            bindings = <
&none  &none  &none  &none   &none   &none   &none  &none  &none  &kp C_VOLUME_UP  &kp K_MUTE        &kp C_VOLUME_DOWN  &none  &none
&none  &none  &none  &none   &none   &none   &none  &none  &none  &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT         &none  &none
&none  &none  &none  &none   &none   &none                 &none  &none            &none             &none              &none  &none
                     &trans  &trans  &trans                &none  &none            &none
            >;
        };

        lower_layer {
            display-name = "special";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5    |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5   |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Unlock|        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC   |        | ENT   |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2           &kp N3        &kp N4        &kp N5          &kp LCTRL  &kp RCTRL  &kp N6    &kp N7    &kp N8     &kp N9     &kp N0  &kp BSPC
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LALT   &kp RALT   &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&kp LSHFT  &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                        &trans    &trans    &trans     &trans     &trans  &trans
                                          &kp LGUI      &trans        &none                                 &none     &trans    &kp SPACE
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        func_layer {
            if-layers = <4 1>;
            then-layer = <5>;
        };
    };
};
